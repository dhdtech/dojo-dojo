# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from drm_financial.models.base_model_ import Model
from drm_financial import util


class Charge(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, appointment_id=None, amount=None):  # noqa: E501
        """Charge - a model defined in OpenAPI

        :param id: The id of this Charge.  # noqa: E501
        :type id: str
        :param appointment_id: The appointment_id of this Charge.  # noqa: E501
        :type appointment_id: str
        :param amount: The amount of this Charge.  # noqa: E501
        :type amount: float
        """
        self.openapi_types = {"id": str, "appointment_id": str, "amount": float}

        self.attribute_map = {"id": "id", "appointment_id": "appointment_id", "amount": "amount"}

        self._id = id
        self._appointment_id = appointment_id
        self._amount = amount

    @classmethod
    def from_dict(cls, dikt) -> "Charge":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Charge of this Charge.  # noqa: E501
        :rtype: Charge
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Charge.


        :return: The id of this Charge.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Charge.


        :param id: The id of this Charge.
        :type id: str
        """

        self._id = id

    @property
    def appointment_id(self):
        """Gets the appointment_id of this Charge.


        :return: The appointment_id of this Charge.
        :rtype: str
        """
        return self._appointment_id

    @appointment_id.setter
    def appointment_id(self, appointment_id):
        """Sets the appointment_id of this Charge.


        :param appointment_id: The appointment_id of this Charge.
        :type appointment_id: str
        """

        self._appointment_id = appointment_id

    @property
    def amount(self):
        """Gets the amount of this Charge.


        :return: The amount of this Charge.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this Charge.


        :param amount: The amount of this Charge.
        :type amount: float
        """

        self._amount = amount
