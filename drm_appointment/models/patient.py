# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from drm_appointment.models.base_model_ import Model
from drm_appointment import util


class Patient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None):  # noqa: E501
        """Patient - a model defined in OpenAPI

        :param id: The id of this Patient.  # noqa: E501
        :type id: str
        :param name: The name of this Patient.  # noqa: E501
        :type name: str
        """
        self.openapi_types = {"id": str, "name": str}

        self.attribute_map = {"id": "id", "name": "name"}

        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> "Patient":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Patient of this Patient.  # noqa: E501
        :rtype: Patient
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Patient.


        :return: The id of this Patient.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Patient.


        :param id: The id of this Patient.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Patient.


        :return: The name of this Patient.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Patient.


        :param name: The name of this Patient.
        :type name: str
        """

        self._name = name
